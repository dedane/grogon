{"remainingRequest":"/home/makashima/Documents/code/grogon/node_modules/babel-loader/lib/index.js!/home/makashima/Documents/code/grogon/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/makashima/Documents/code/grogon/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/makashima/Documents/code/grogon/src/components/Maps.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/makashima/Documents/code/grogon/src/components/Maps.vue","mtime":1596648559826},{"path":"/home/makashima/Documents/code/grogon/node_modules/cache-loader/dist/cjs.js","mtime":1595626525401},{"path":"/home/makashima/Documents/code/grogon/node_modules/babel-loader/lib/index.js","mtime":1595626524733},{"path":"/home/makashima/Documents/code/grogon/node_modules/cache-loader/dist/cjs.js","mtime":1595626525401},{"path":"/home/makashima/Documents/code/grogon/node_modules/vue-loader/lib/index.js","mtime":1595626532201}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvbWFrYXNoaW1hL0RvY3VtZW50cy9jb2RlL2dyb2dvbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBNYXBib3ggZnJvbSAnbWFwYm94LWdsJzsKaW1wb3J0IHsgTWdsTWFwLCBNZ2xQb3B1cCwgTWdsTWFya2VyIH0gZnJvbSAndnVlLW1hcGJveCc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICAvKiBNYXBib3gsICovCiAgICBNZ2xNYXA6IE1nbE1hcCwKICAgIE1nbFBvcHVwOiBNZ2xQb3B1cCwKICAgIE1nbE1hcmtlcjogTWdsTWFya2VyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWNjZXNzVG9rZW46ICdway5leUoxSWpvaVpYWmhibk0yTmpZaUxDSmhJam9pWTJwMmJUVndPR2hzTUhsNGJqUXdiMlpsYm1SeVlucHdZU0o5Ll9mNU1yWTFQcXRMWTA2V2Z2M25RNmcnLAogICAgICBtYXBTdHlsZTogJ21hcGJveDovL3N0eWxlcy9tYXBib3gvc3RyZWV0cy12MTEnLAogICAgICBteUNvb3JkaW5hdGVzOiB7CiAgICAgICAgTGF0OiAwLAogICAgICAgIExvbjogMAogICAgICB9LAogICAgICBtYXBDb29kaW5hdGVzOiB7CiAgICAgICAgbGF0OiAwLAogICAgICAgIGxvbjogMAogICAgICB9LAogICAgICBzaG93VXNlckxvY2F0aW9uOiB0cnVlLAogICAgICB6b29tOiAzLAogICAgICBtYXA6IFtdLAogICAgICBjb29yZGluYXRlZDogW10sCiAgICAgIG1lY2hzOiBbewogICAgICAgIGltZzogJ2h0dHBzOi8vaWsuaW1hZ2VraXQuaW8vdWd5b2RpcTE1L01jZG9uYWxkcy0xMDIzeDY3NV9yakdRTFVBalIuanBnJywKICAgICAgICBuYW1lOiAnamFuZSBLYXRodXJlJywKICAgICAgICBpY29uOiAnbWRpLWNlbGxwaG9uZScsCiAgICAgICAgaW5mbzogJzA3MTIzNTQ2OTMgJwogICAgICB9XQogICAgfTsKICB9LAogIC8vIGNvbXB1dGVkIHByb3BlcnR5CiAgY29tcHV0ZWQ6IHsKICAgIC8qIGNvb3JkaW5hdGVzKCkgewogICAgICAvLyAgTWFwIGZ1bmN0aW9uIGFzc2lzdCBpbiBtYXBwaW5nIGNvb3JkaW5hdGVzIHRvIHRoZWlyIGV4YWN0IG1lbWJlciBhcnJheQogICAgICBjb25zdCByZXMgPSB0aGlzLmNvb3JkaW5hdGVkLm1hcCgoeyBsb25naXR1ZGUsIGxhdGl0dWRlIH0pID0+IFsKICAgICAgICBsb25naXR1ZGUsCiAgICAgICAgbGF0aXR1ZGUsCiAgICAgIF0pOwogICAgICByZXR1cm4gcmVzOwogICAgfSwgKi8KICB9LAoKICAvKiBtb3VudGVkKCkgewogICAgY29uc3QgTWFwYm94Z2wgPSByZXF1aXJlKCdtYXBib3gtZ2wnKTsKICAgICBjb25zdCBjb29yZGluYXRlZCA9IHRoaXMubWFwLmFkZENvbnRyb2woCiAgICAgIG5ldyBNYXBib3hnbC5HZW9sb2NhdGVDb250cm9sKHsKICAgICAgICBwb3NpdGlvbk9wdGlvbnM6IHsKICAgICAgICAgIGVuYWJsZUhpZ2hBY2N1cmFjeTogdHJ1ZSwKICAgICAgICB9LAogICAgICAgIHRyYWNrVXNlckxvY2F0aW9uOiB0cnVlLAogICAgICB9KSwKICAgICk7CiAgfSwgKi8KICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5tYXBib3ggPSBNYXBib3g7CiAgICBNYXBib3guYWRkQ29udHJvbChuZXcgTWFwYm94Lkdlb2xvY2F0ZUNvbnRyb2woewogICAgICBwb3NpdGlvbk9wdGlvbnM6IHsKICAgICAgICBlbmFibGVIaWdoQWNjdXJhY3k6IHRydWUKICAgICAgfSwKICAgICAgdHJhY2tVc2VyTG9jYXRpb246IHRydWUKICAgIH0pKTsKICB9LAogIC8vIEFsbG93IHVzIHRvIHJlY2VpdmUgb3VyIGRhdGEgaW1tZWRpYXRlbHkgaXRzIGJlZW4gcmVuZGVyZWQKICAvLyBBbHRob3VnaCB0aGV5IGRvIG5vdCBmdW5jdGlvbiB3aGVuIHNlcnZlciBpcyByZW5kZXJpbmcKICAvLyBVc2VkIG1vc3RseSB3aXRoIHByb21pc2VzCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIC8qIGF3YWl0IG5hdmlnYXRvci5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oCiAgICAgICh7IGNvb3JkcyB9KSA9PiB7CiAgICAgICAgdGhpcy5sb25naXR1ZGUgPSBjb29yZHMubG9uZ2l0dXRkZTsKICAgICAgICB0aGlzLmxhdGl0dWRlID0gY29vcmRzLmxhdGl0dWRlOwogICAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLmZldGNoRGF0YShjb29yZHMpOwogICAgICAgIHRoaXMuY29vcmRpbmF0ZWQgPSBkYXRhOwogICAgICB9LAogICAgKTsgKi8KCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKiAgYXN5bmMgZmV0Y2hEYXRhKFtsYXRpdHVkZSwgbG9uZ2l0dWRlXSkgewogICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5jb29yZGluYXRlZC5wdXNoKFsKICAgICAgICBsYXRpdHVkZSwKICAgICAgICBsb25naXR1ZGUsCiAgICAgIF0pOwogICAgICByZXR1cm4gZGF0YTsKICAgIH0sCiAgICBnZXRDb29yZGluYXRlKHsgbG9uZ2l0dWRlLCBsYXRpdHVkZSB9KSB7CiAgICAgIHJldHVybiBbbG9uZ2l0dWRlLCBsYXRpdHVkZV07CiAgICB9LCAqLwogIH0sCiAgdXBkYXRlZDoge30gLy8gVGhpcyBsaWZlY3ljbGUgaG9vayBjYWxscyB0aGUgbWFwYm94IG1hcCBldmVuIGJlZm9yZSB0aGUgY29tcG9uZW50IGlzIGluaXRpYWxpc2VkCgp9Ow=="},{"version":3,"sources":["Maps.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,OAAA,MAAA,MAAA,WAAA;AACA,SACA,MADA,EAEA,QAFA,EAGA,SAHA,QAIA,YAJA;AAMA,eAAA;AACA,EAAA,UAAA,EAAA;AACA;AACA,IAAA,MAAA,EAAA,MAFA;AAGA,IAAA,QAAA,EAAA,QAHA;AAIA,IAAA,SAAA,EAAA;AAJA,GADA;AAOA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,WAAA,EAAA,4FADA;AAEA,MAAA,QAAA,EAAA,oCAFA;AAGA,MAAA,aAAA,EAAA;AACA,QAAA,GAAA,EAAA,CADA;AAEA,QAAA,GAAA,EAAA;AAFA,OAHA;AAOA,MAAA,aAAA,EAAA;AACA,QAAA,GAAA,EAAA,CADA;AAEA,QAAA,GAAA,EAAA;AAFA,OAPA;AAWA,MAAA,gBAAA,EAAA,IAXA;AAYA,MAAA,IAAA,EAAA,CAZA;AAaA,MAAA,GAAA,EAAA,EAbA;AAcA,MAAA,WAAA,EAAA,EAdA;AAeA,MAAA,KAAA,EAAA,CACA;AACA,QAAA,GAAA,EAAA,mEADA;AAEA,QAAA,IAAA,EAAA,cAFA;AAGA,QAAA,IAAA,EAAA,eAHA;AAIA,QAAA,IAAA,EAAA;AAJA,OADA;AAfA,KAAA;AAAA,GAPA;AA+BA;AACA,EAAA,QAAA,EAAA;AACA;;;;;;;;AADA,GAhCA;;AA0CA;;;;;;;;;;;AAYA,EAAA,OAtDA,qBAsDA;AACA,SAAA,MAAA,GAAA,MAAA;AACA,IAAA,MAAA,CAAA,UAAA,CAAA,IAAA,MAAA,CAAA,gBAAA,CAAA;AACA,MAAA,eAAA,EAAA;AACA,QAAA,kBAAA,EAAA;AADA,OADA;AAIA,MAAA,iBAAA,EAAA;AAJA,KAAA,CAAA;AAMA,GA9DA;AA+DA;AACA;AACA;AACA,EAAA,OAlEA,qBAkEA;AACA;;;;;;;;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,GA3EA;AA4EA,EAAA,OAAA,EAAA;AACA;;;;;;;;;;AADA,GA5EA;AAwFA,EAAA,OAAA,EAAA,EAxFA,CA0FA;;AA1FA,CAAA","sourcesContent":["<template>\n  <div id=\"maps\">\n    <v-container fluid>\n       <v-card\n      flat\n      height='400px'\n      class='mb-12'\n      >\n      <MglMap\n        :accessToken=\"accessToken\"\n        :mapStyle=\"mapStyle\"\n        center=[  -1.2833,36.8167 ]\n        :zoom=\"zoom\"\n        :attributionControl=\"false\"\n      >\n      <MglAttributionControl />\n      <MglGeolocateControl position=\"top-right\"/>\n      <MglMarker\n        coordinates=[ -1.2833,36.8167 ]\n        :color='blue'>\n      <MglPopup\n        coordinates=[ -1.2833,36.8167 ]>\n          <v-card v-model='mechs'\n           v-for='mech in mechs'\n           :key='mech.img'\n           class=\"mx-auto\">\n          <v-list-item-avatar\n             tile\n             size='80'>\n             <v-img :src='mech.img'>\n             </v-img>\n          </v-list-item-avatar>\n          <v-list-item-content>\n              <div class='overline mb-4'>Mechanic</div>\n              <v-list-item-title class=\"headline mb-1\" v-text='mech.name'></v-list-item-title>\n              <v-list-item-icon>\n                <v-icon v-text='mech.icon'></v-icon>\n              </v-list-item-icon>\n              <v-list-item-content>\n                <v-list-item-title v-text='mech.info'></v-list-item-title>\n              </v-list-item-content>\n          </v-list-item-content>\n            <v-card-actions>\n              <v-btn rounded large color='green' dark>Request</v-btn>\n              <v-btn rounded large outlined='green' >Call</v-btn>\n            </v-card-actions>\n           </v-card>\n         <v-icon slot=\"marker\">mdi-map-marker</v-icon>\n      </MglPopup>\n      </MglMarker>\n    </MglMap>\n</v-card>\n</v-container>\n  </div>\n</template>\n<script>\nimport Mapbox from 'mapbox-gl';\nimport {\n  MglMap,\n  MglPopup,\n  MglMarker,\n} from 'vue-mapbox';\n\nexport default {\n  components: {\n    /* Mapbox, */\n    MglMap,\n    MglPopup,\n    MglMarker,\n  },\n  data: () => ({\n    accessToken: 'pk.eyJ1IjoiZXZhbnM2NjYiLCJhIjoiY2p2bTVwOGhsMHl4bjQwb2ZlbmRyYnpwYSJ9._f5MrY1PqtLY06Wfv3nQ6g',\n    mapStyle: 'mapbox://styles/mapbox/streets-v11',\n    myCoordinates: {\n      Lat: 0,\n      Lon: 0,\n    },\n    mapCoodinates: {\n      lat: 0,\n      lon: 0,\n    },\n    showUserLocation: true,\n    zoom: 3,\n    map: [],\n    coordinated: [],\n    mechs: [\n      {\n        img: 'https://ik.imagekit.io/ugyodiq15/Mcdonalds-1023x675_rjGQLUAjR.jpg',\n        name: 'jane Kathure',\n        icon: 'mdi-cellphone',\n        info: '0712354693 ',\n      },\n    ],\n  }),\n  // computed property\n  computed: {\n    /* coordinates() {\n      //  Map function assist in mapping coordinates to their exact member array\n      const res = this.coordinated.map(({ longitude, latitude }) => [\n        longitude,\n        latitude,\n      ]);\n      return res;\n    }, */\n  },\n  /* mounted() {\n    const Mapboxgl = require('mapbox-gl');\n\n    const coordinated = this.map.addControl(\n      new Mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true,\n        },\n        trackUserLocation: true,\n      }),\n    );\n  }, */\n  created() {\n    this.mapbox = Mapbox;\n    Mapbox.addControl(new Mapbox.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true,\n      },\n      trackUserLocation: true\n    }))\n  },\n  // Allow us to receive our data immediately its been rendered\n  // Although they do not function when server is rendering\n  // Used mostly with promises\n  async mounted() {\n    /* await navigator.geolocation.getCurrentPosition(\n      ({ coords }) => {\n        this.longitude = coords.longitutde;\n        this.latitude = coords.latitude;\n        const data = this.fetchData(coords);\n        this.coordinated = data;\n      },\n    ); */\n  },\n  methods: {\n    /*  async fetchData([latitude, longitude]) {\n      const data = await this.coordinated.push([\n        latitude,\n        longitude,\n      ]);\n      return data;\n    },\n    getCoordinate({ longitude, latitude }) {\n      return [longitude, latitude];\n    }, */\n  },\n  updated: {\n  },\n  // This lifecycle hook calls the mapbox map even before the component is initialised\n};\n</script>\n<style>\n#map {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}
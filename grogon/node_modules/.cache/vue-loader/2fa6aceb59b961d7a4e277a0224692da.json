{"remainingRequest":"/home/makashima/Documents/code/grogon/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/makashima/Documents/code/grogon/src/components/Maps.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/makashima/Documents/code/grogon/src/components/Maps.vue","mtime":1597046009900},{"path":"/home/makashima/Documents/code/grogon/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/makashima/Documents/code/grogon/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/makashima/Documents/code/grogon/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/makashima/Documents/code/grogon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/makashima/Documents/code/grogon/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojbWFwIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHRvcDogMDsKICAgIGJvdHRvbTogMDsKICAgIHdpZHRoOiAxMDAlOwogIH0K"},{"version":3,"sources":["Maps.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4UA;AACA;AACA;AACA;AACA;AACA","file":"Maps.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"maps\">\n    <v-container fluid>\n       <v-card\n      flat\n      height='400px'\n      class='mb-12'\n      >\n      <MglMap\n        :accessToken=\"accessToken\"\n        :mapStyle=\"mapStyle\"\n        :center=\"coordinates\"\n        :zoom=\"zoom\"\n        @map-load=\"addMarkers\"\n      >\n      <MglAttributionControl />\n      <MglGeolocateControl position=\"top-right\"/>\n      <MglMarker\n        :coordinates=\"coordinates\"\n        :color='blue'>\n      <MglPopup\n        :coordinates=\"coordinates\">\n          <v-card v-model='mechs'\n           v-for='mech in mechs'\n           :key='mech.img'\n           class=\"mx-auto\">\n          <v-list-item-avatar\n             tile\n             size='80'>\n             <v-img :src='mech.img'>\n             </v-img>\n          </v-list-item-avatar>\n          <v-list-item-content>\n              <div class='overline mb-4'>Mechanic</div>\n              <v-list-item-title class=\"headline mb-1\" v-text='mech.name'></v-list-item-title>\n              <v-list-item-icon>\n                <v-icon v-text='mech.icon'></v-icon>\n              </v-list-item-icon>\n              <v-list-item-content>\n                <v-list-item-title v-text='mech.info'></v-list-item-title>\n              </v-list-item-content>\n          </v-list-item-content>\n            <v-card-actions>\n              <v-btn rounded large color='green' dark>Request</v-btn>\n              <v-btn rounded large outlined='green' >Call</v-btn>\n            </v-card-actions>\n           </v-card>\n         <v-icon slot=\"marker\">mdi-map-marker</v-icon>\n      </MglPopup>\n      </MglMarker>\n    </MglMap>\n</v-card>\n</v-container>\n  </div>\n</template>\n<script>\nimport Mapbox from 'mapbox-gl';\n\nimport {\n  MglMap,\n  MglPopup,\n  MglMarker,\n} from 'vue-mapbox';\n\nexport default {\n  components: {\n    /* Mapbox, */\n    MglMap,\n    MglPopup,\n    MglMarker,\n  },\n  data: () => ({\n    accessToken: 'pk.eyJ1IjoiZXZhbnM2NjYiLCJhIjoiY2p2bTVwOGhsMHl4bjQwb2ZlbmRyYnpwYSJ9._f5MrY1PqtLY06Wfv3nQ6g',\n    mapStyle: 'mapbox://styles/evans666/ckdnkxg7y16gf1iqj0zh8g9mu',\n    myCoordinates: {\n      Lat: 0,\n      Lon: 0,\n    },\n    mapCoodinates: {\n      lat: 0,\n      lon: 0,\n    },\n    showUserLocation: true,\n    zoom: 15,\n    map: [],\n    coordinates: [36.9390643853648526, -1.156947303772],\n    coordinated: [],\n    mechs: [\n      {\n        img: 'https://ik.imagekit.io/ugyodiq15/Mcdonalds-1023x675_rjGQLUAjR.jpg',\n        name: 'jane Kathure',\n        icon: 'mdi-cellphone',\n        info: '0712354693 ',\n      },\n    ],\n  }),\n  // computed property\n  computed: {\n    /* coordinates() {\n      //  Map function assist in mapping coordinates to their exact member array\n      const res = this.coordinated.map(({ longitude, latitude }) => [\n        longitude,\n        latitude,\n      ]);\n      return res;\n    }, */\n  },\n  /* mounted() {\n    const Mapboxgl = require('mapbox-gl');\n\n    const coordinated = this.map.addControl(\n      new Mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true,\n        },\n        trackUserLocation: true,\n      }),\n    );\n  }, */\n  created() {\n    this.mapbox = Mapbox;\n  },\n  // Allow us to receive our data immediately its been rendered\n  // Although they do not function when server is rendering\n  // Used mostly with promises\n  async mounted() {\n    /* await navigator.geolocation.getCurrentPosition(\n      ({ coords }) => {\n        this.longitude = coords.longitutde;\n        this.latitude = coords.latitude;\n        const data = this.fetchData(coords);\n        this.coordinated = data;\n      },\n    ); */\n  },\n  methods: {\n    /*  async fetchData([latitude, longitude]) {\n      const data = await this.coordinated.push([\n        latitude,\n        longitude,\n      ]);\n      return data;\n    },\n    getCoordinate({ longitude, latitude }) {\n      return [longitude, latitude];\n    }, */\n    addMarkers(map) {\n      // eslint-disable-next-line global-require\n      const mapboxgl;\n      const geojson = {\n        type: 'FeatureCollection',\n        features: [\n          {\n            type: 'Feature',\n            properties: {\n              'marker-color': '#7e7e7e',\n              'marker-size': 'medium',\n              'marker-symbol': 'circle-stroked',\n              Name: 'John Autocare',\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: [\n                36.9430947303772,\n                -1.1590643853648526,\n              ],\n            },\n          },\n          {\n            type: 'Feature',\n            properties: {\n              'marker-color': '#7e7e7e',\n              'marker-size': 'medium',\n              'marker-symbol': 'circle-stroked',\n              Name: 'Shwari Autocare',\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: [\n                36.936163902282715,\n                -1.1609308202558843,\n              ],\n            },\n          },\n          {\n            type: 'Feature',\n            properties: {\n              'marker-color': '#7e7e7e',\n              'marker-size': 'medium',\n              'marker-symbol': 'circle-stroked',\n              Name: 'Get it Right Autoshop',\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: [\n                36.936635971069336,\n                -1.1611453529230646,\n              ],\n            },\n          },\n          {\n            type: 'Feature',\n            properties: {\n              'marker-color': '#7e7e7e',\n              'marker-size': 'medium',\n              'marker-symbol': 'circle-stroked',\n              Name: 'Isaax Autoshop',\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: [\n                36.93378210067748,\n                -1.1593432780129989,\n              ],\n            },\n          },\n          {\n            type: 'Feature',\n            properties: {\n              'marker-color': '#7e7e7e',\n              'marker-size': 'medium',\n              'marker-symbol': 'circle-stroked',\n              Name: 'EasyFix Autocare',\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: [\n                36.9364857673645,\n                -1.157262309130391,\n              ],\n            },\n          },\n          {\n            type: 'Feature',\n            properties: {\n              'marker-color': '#7e7e7e',\n              'marker-size': 'medium',\n              'marker-symbol': 'circle-stroked',\n              Name: 'Fahari Car care',\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: [\n                36.93326711654663,\n                -1.1520277002481618,\n              ],\n            },\n          },\n          {\n            type: 'Feature',\n            properties: {\n              'marker-color': '#7e7e7e',\n              'marker-size': 'medium',\n              'marker-symbol': 'circle-stroked',\n              Name: 'Gears And Hamer auto',\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: [\n                36.92779541015625,\n                -1.1562325507679554,\n              ],\n            },\n          },\n          {\n            type: 'Feature',\n            properties: {\n              'marker-color': '#7e7e7e',\n              'marker-size': 'medium',\n              'marker-symbol': 'circle-stroked',\n              Name: 'NeverStop auto',\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: [\n                36.92358970642089,\n                -1.1546879125240137,\n              ],\n            },\n          },\n          {\n            type: 'Feature',\n            properties: {\n              'marker-color': '#7e7e7e',\n              'marker-size': 'medium',\n              'marker-symbol': 'circle-stroked',\n              Name: 'East Mechanics',\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: [\n                36.919426918029785,\n                -1.1532290867451627,\n              ],\n            },\n          },\n          {\n            type: 'Feature',\n            properties: {\n              'marker-color': '#7e7e7e',\n              'marker-size': 'medium',\n              'marker-symbol': 'circle-stroked',\n              Name: 'Nostra Autocare',\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: [\n                36.95054054260253,\n                -1.16155296494586,\n              ],\n            },\n          },\n        ],\n      };\n      geojson.features.forEach((marker) => {\n        // create a HTML element for each feature\n        const el = document.createElement('div');\n        el.className = 'Map__marker';\n\n        // make a marker for each feature and add to the map\n        new mapboxgl.Marker(el)\n          .setLngLat(marker.geometry.coordinates)\n          .addTo(map);\n      });\n    },\n  },\n  updated: {\n  },\n  // This lifecycle hook calls the mapbox map even before the component is initialised\n};\n</script>\n<style>\n#map {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n  }\n</style>\n"]}]}